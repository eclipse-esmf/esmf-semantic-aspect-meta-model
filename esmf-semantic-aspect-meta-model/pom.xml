<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH
  ~
  ~ See the AUTHORS file(s) distributed with this work for additional
  ~ information regarding authorship.
  ~
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  ~
  ~ SPDX-License-Identifier: MPL-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.eclipse.esmf</groupId>
      <artifactId>esmf-parent</artifactId>
      <version>2</version>
      <relativePath></relativePath>
   </parent>
   <artifactId>esmf-semantic-aspect-meta-model</artifactId>
   <name>Semantic Aspect Meta Model</name>
   <version>DEV-SNAPSHOT</version>
   <packaging>jar</packaging>

   <description>ESMF Semantic Aspect Meta Model</description>
   <url>https://eclipse-esmf.github.io/</url>
   <licenses>
      <license>
         <name>MPL-2.0</name>
         <url>https://www.mozilla.org/en-US/MPL/2.0/</url>
      </license>
   </licenses>
   <developers>
      <developer>
         <name>Eclipse Semantic Modeling Framework Team</name>
         <email>esmf-dev@eclipse.org</email>
         <organization>Eclipse Semantic Modeling Framework</organization>
         <organizationUrl>https://projects.eclipse.org/projects/dt.esmf</organizationUrl>
      </developer>
   </developers>
   <scm>
      <url>https://github.com/eclipse-esmf/esmf-semantic-aspect-meta-model</url>
      <connection>scm:git:git://github.com:eclipse-esmf/esmf-semantic-aspect-meta-model.git</connection>
      <developerConnection>scm:git:ssh://git@github.com:eclipse-esmf/esmf-semantic-aspect-meta-model.git</developerConnection>
   </scm>

   <properties>
      <!-- General project settings -->
      <java-target-version>21</java-target-version>
      <java-source-version>21</java-source-version>
      <!-- This is the meta model version (as included in the URNs).
           Note that this can differ from the project.version: The project.version could for example be the
           version of a milestone release such as 2.0.0-M1, while the meta-model-version would still be 2.0.0. -->
      <meta-model-version>2.2.0</meta-model-version>
      <shacl-version>1.4.4</shacl-version>
      <jena-version>5.4.0</jena-version>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.assertj</groupId>
         <artifactId>assertj-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.topbraid</groupId>
         <artifactId>shacl</artifactId>
         <version>${shacl-version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.vavr</groupId>
         <artifactId>vavr</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-codec</groupId>
         <artifactId>commons-codec</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.graalvm.js</groupId>
         <artifactId>js-scriptengine</artifactId>
         <version>24.2.1</version>
      </dependency>
      <dependency>
         <groupId>org.graalvm.js</groupId>
         <artifactId>js</artifactId>
         <version>24.2.1</version>
      </dependency>

   </dependencies>

   <distributionManagement>
       <snapshotRepository>
           <id>ossrh</id>
           <url>https://oss.sonatype.org/content/repositories/snapshots</url>
       </snapshotRepository>
       <repository>
           <id>ossrh</id>
           <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
       </repository>
   </distributionManagement>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.14.0</version>
            <configuration>
               <source>${java-source-version}</source>
               <target>${java-target-version}</target>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
               <execution>
                  <id>enforce-java21</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion>
                           <version>[21,22)</version>
                        </requireJavaVersion>
                     </rules>
                     <fail>true</fail>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.eclipse.esmf</groupId>
            <artifactId>esmf-samm-build-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
               <execution>
                  <id>generate-units-ttl</id>
                  <goals>
                     <goal>generateUnits</goal>
                  </goals>
                  <configuration>
                     <metaModelVersion>${meta-model-version}</metaModelVersion>
                     <!-- The URL of the zip file provided by UNECE for Recommendation 20 -->
                     <rec20Url>https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_Rev7e_2010.zip</rec20Url>
                     <!-- The directory where custom units are defined that will be incorporated into units.ttl in addition to Rec20 -->
                     <customRDFInputDirectory>${project.basedir}/../esmf-samm-build-plugin/src/main/resources/</customRDFInputDirectory>
                     <!-- The path to the units.ttl file to write during build -->
                     <outputPath>${project.basedir}/src/main/resources/samm/unit/${meta-model-version}/units.ttl</outputPath>
                  </configuration>
               </execution>
               <execution>
                  <id>generate-bcp47-language-subtag-registry-script</id>
                  <goals>
                     <goal>downloadBcp47LanguageSubtagRegistry</goal>
                  </goals>
                  <configuration>
                     <!-- The URL of the JSON representation of the BCP 47 language subtag registry -->
                     <inputUrl>https://raw.githubusercontent.com/mattcg/language-subtag-registry/master/data/json/registry.json</inputUrl>
                     <!-- The BCP 47 language subtag registry JavaScript file to write during build -->
                     <output>${project.basedir}/src/main/resources/samm/scripts/language-registry.js</output>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>sign</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-gpg-plugin</artifactId>
                  <version>${maven-gpg-plugin-version}</version>
                  <executions>
                     <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                           <goal>sign</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <gpgArguments>
                        <arg>--pinentry-mode</arg>
                        <arg>loopback</arg>
                     </gpgArguments>
                  </configuration>
               </plugin>
            </plugins>
         </build>

      </profile>
   </profiles>
</project>
